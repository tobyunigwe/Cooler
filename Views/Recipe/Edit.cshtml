@model CoolerApplication.Models.Recipe

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial(
    "../Auth/_Auth"
    )
<div class="container-sm mt-3">

    <h2>Edit Recipe</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RecipeIngredients, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (List<KeyValuePair<string, string>> ingredient in ViewBag.AllIngredients)
                    {
                        @ingredient[1].Value;
                        <input type="number" name="SelectedIngredients[@ingredient[0].Value]" value="@ingredient[2].Value" /><br />
                    }

                    @*@Html.ListBoxFor(s => s.SelectedIngredients, new MultiSelectList(ViewBag.AllIngredients, "Value", "Text", ViewBag.selectedIngredientIDs))*@

                    @Html.ValidationMessageFor(model => model.RecipeIngredients, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
